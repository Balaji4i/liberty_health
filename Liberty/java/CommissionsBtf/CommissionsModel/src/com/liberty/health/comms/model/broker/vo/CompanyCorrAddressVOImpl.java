package com.liberty.health.comms.model.broker.vo;

import com.core.model.vo.classes.CoreViewObjectImpl;

import com.core.utils.DateConversionUtil;
import com.core.utils.DateUtils;


import com.liberty.health.comms.model.broker.vo.common.CompanyCorrAddressVO;

import javax.faces.application.FacesMessage;

import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.Date;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 13 11:10:12 CAT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CompanyCorrAddressVOImpl extends CoreViewObjectImpl implements CompanyCorrAddressVO {
    /**
     * This is the default constructor (do not remove).
     */
    public CompanyCorrAddressVOImpl() {
    }

    /**
     * Returns the variable value for pCompanyIdNo.
     * @return variable value for pCompanyIdNo
     */
    public Integer getpCompanyIdNo() {
        return (Integer) ensureVariableManager().getVariableValue("pCompanyIdNo");
    }

    /**
     * Sets <code>value</code> for variable pCompanyIdNo.
     * @param value value to bind as pCompanyIdNo
     */
    public void setpCompanyIdNo(Integer value) {
        ensureVariableManager().setVariableValue("pCompanyIdNo", value);
    }

    /**
     * Returns the variable value for pCurrentDate.
     * @return variable value for pCurrentDate
     */
    public Date getpCurrentDate() {
        return (Date) ensureVariableManager().getVariableValue("pCurrentDate");
    }

    /**
     * Sets <code>value</code> for variable pCurrentDate.
     * @param value value to bind as pCurrentDate
     */
    public void setpCurrentDate(Date value) {
        ensureVariableManager().setVariableValue("pCurrentDate", value);
    }
    
    public void setCorrViewCriteria(Integer companyIdNo) {
        this.setpCompanyIdNo(companyIdNo); 
        this.setpAddressTypeCode("C");
        this.executeQuery();
    }
    public void updateCorrEffDates(Integer compIdNo,  Date currentDate) {        
            
            System.out.println("pre get the address criteria");
            String viewCriteriaName = "CompanyCorrAddressVOCriteria";
            oracle.jbo.domain.Date CurrDate = new oracle.jbo.domain.Date(oracle.jbo.domain.Date.getCurrentDate());
                        
            CompanyCorrAddressVOImpl vo = (CompanyCorrAddressVOImpl) this.getViewObject();
            
            Row addressCorr              = vo.getCurrentRow();
            
            Date effectiveStartDate   = (Date) addressCorr.getAttribute("EffectiveStartDate");
            Date effectiveEndDate     = (Date) addressCorr.getAttribute("EffectiveEndDate");
            java.sql.Date currDateSql  = DateConversionUtil.convertToJSDate(DateUtils.currentDateTruncated());
            java.sql.Date checkEndDate = DateConversionUtil.convertToJSDate(effectiveEndDate);
            java.sql.Date checkStartDate = DateConversionUtil.convertToJSDate(effectiveStartDate);
            
            ViewCriteria vc = vo.getViewCriteria(viewCriteriaName);
            vo.removeViewCriteria(viewCriteriaName);
            vc.resetCriteria();
            vo.applyViewCriteria(vc);
            vo.setNamedWhereClauseParam("pCompanyIdNo", compIdNo);
            vo.setNamedWhereClauseParam("pAddressTypeCode", "C");
            vo.setNamedWhereClauseParam("pCurrentDate", "");

            vo.setSortBy("CompanyIdNo, CountryCode, AddressTypeCode, EffectiveStartDate desc");
            vo.executeQuery();
            System.out.println("after execute query");
            RowSetIterator rowIt = vo.createRowSetIterator(null);
            rowIt.reset();

          //  Date startDate = DateUtils.getLibertyMinDate();
            Integer companyIdNo = 0;
            String cntryCode = "";
            String addressTypeCode = "C";

            while (rowIt.hasNext()) {
                
                System.out.println("pre get the address criteria");
                CompanyCorrAddressVORowImpl row = (CompanyCorrAddressVORowImpl) rowIt.next();
                
                java.sql.Date endDate = DateConversionUtil.convertToJSDate(row.getEffectiveEndDate());
                Date startDate = row.getEffectiveStartDate();
                Date newEndDate = DateUtils.getLibertyMaxDate();
                //for debugging see what values are coming back from the view iterator
                System.out.println("address type code is " +row.getAddressTypeCode().toString());
              //  System.out.println("address country row value is " +row.getAddressCountryCode().toString());
              //  System.out.println("country code values is " +row.getCountryCode().toString());
                
              /*  if (companyIdNo.compareTo(row.getCompanyIdNo()) != 0 || addressTypeCode.compareTo(row.getAddressTypeCode()) != 0) {
                    row.setEffectiveEndDate(newEndDate);
                } else if (endDate != newEndDate) {
                    row.setEffectiveEndDate(DateConversionUtil.subtractDays(startDate, 1));
                    System.out.println("Setting end date " + DateConversionUtil.subtractDays(startDate, 1));
                }*/
                
                System.out.println("curr row start date " + checkStartDate); 
                System.out.println("all rows iterator sdate " + startDate);
                
                if (startDate.equals(checkStartDate)) {
                    row.setEffectiveEndDate(newEndDate);
                   // row.setAddressLine1(addr1);
                   // row.setAddressLine2(addr2);
                  //  row.setAddressLine3(addr3);
                  //  row.setPostalCode(postCode);
                } else if (currDateSql.before(endDate))
                {
                    row.setEffectiveEndDate(DateConversionUtil.subtractDays(checkStartDate, 1));
                    System.out.println("Setting end date " + DateConversionUtil.subtractDays(checkStartDate, 1));  
                }
                
                companyIdNo = row.getCompanyIdNo();
                startDate = row.getEffectiveStartDate();
                cntryCode = row.getCountryCode();
                addressTypeCode = row.getAddressTypeCode();
            }
            rowIt.closeRowSetIterator();
            this.getDBTransaction().commit();
            vo.removeViewCriteria(viewCriteriaName);
            vc.resetCriteria();
            vo.applyViewCriteria(vc);
            vo.setNamedWhereClauseParam("pCompanyIdNo", compIdNo);
            vo.setNamedWhereClauseParam("pCurrentDate", currentDate);
            vo.setNamedWhereClauseParam("pAddressTypeCode", "C");
            vo.executeQuery();
        }


    /**
     * Returns the variable value for pAddressTypeCode.
     * @return variable value for pAddressTypeCode
     */
    public String getpAddressTypeCode() {
        return (String) ensureVariableManager().getVariableValue("pAddressTypeCode");
    }

    /**
     * Sets <code>value</code> for variable pAddressTypeCode.
     * @param value value to bind as pAddressTypeCode
     */
    public void setpAddressTypeCode(String value) {
        ensureVariableManager().setVariableValue("pAddressTypeCode", value);
    }
}

