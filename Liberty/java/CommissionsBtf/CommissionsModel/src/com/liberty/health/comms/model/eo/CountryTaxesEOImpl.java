package com.liberty.health.comms.model.eo;

import com.core.utils.DateConversionUtil;
import com.core.utils.DateUtils;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 17 11:15:20 CAT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CountryTaxesEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        CountryCode,
        AccreditationTypeIdNo,
        EffectiveStartDate,
        EffectiveEndDate,
        AccredLocal,
        AccredMulti,
        NoAccrLocal,
        NoAccrMulti,
        LastUpdateDatetime,
        Username,
        AccreditationType;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int COUNTRYCODE = AttributesEnum.CountryCode.index();
    public static final int ACCREDITATIONTYPEIDNO = AttributesEnum.AccreditationTypeIdNo.index();
    public static final int EFFECTIVESTARTDATE = AttributesEnum.EffectiveStartDate.index();
    public static final int EFFECTIVEENDDATE = AttributesEnum.EffectiveEndDate.index();
    public static final int ACCREDLOCAL = AttributesEnum.AccredLocal.index();
    public static final int ACCREDMULTI = AttributesEnum.AccredMulti.index();
    public static final int NOACCRLOCAL = AttributesEnum.NoAccrLocal.index();
    public static final int NOACCRMULTI = AttributesEnum.NoAccrMulti.index();
    public static final int LASTUPDATEDATETIME = AttributesEnum.LastUpdateDatetime.index();
    public static final int USERNAME = AttributesEnum.Username.index();
    public static final int ACCREDITATIONTYPE = AttributesEnum.AccreditationType.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CountryTaxesEOImpl() {
    }
    
    public boolean isAttributeUpdateable(int i) {
     /**
      * T.Percy changes to allow for updating of information if the start date is less than the current date
      * and the end date is after the current date
      */
     
     //   Date currentDate = DateUtils.currentDateTruncated();
        java.sql.Date startDateSql = DateConversionUtil.convertToJSDate(this.getEffectiveStartDate());
        java.sql.Date endDateSql = DateConversionUtil.convertToJSDate(this.getEffectiveEndDate());
        java.sql.Date currDateSql  = DateConversionUtil.convertToJSDate(DateUtils.currentDateTruncated()); 
        
        if (startDateSql != null && endDateSql != null && currDateSql != null) {

            if (
                (startDateSql.before(currDateSql) || 
                 startDateSql.equals(currDateSql)) &&
                 endDateSql.after(currDateSql)
               ) {
                  return true;
                } else {
                  return false;
                }
        } else {
            return true;
        }
    }

    /**
     * Gets the attribute value for CountryCode, using the alias name CountryCode.
     * @return the value of CountryCode
     */
    public String getCountryCode() {
        return (String) getAttributeInternal(COUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CountryCode.
     * @param value value to set the CountryCode
     */
    public void setCountryCode(String value) {
        setAttributeInternal(COUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for AccreditationTypeIdNo, using the alias name AccreditationTypeIdNo.
     * @return the value of AccreditationTypeIdNo
     */
    public Number getAccreditationTypeIdNo() {
        return (Number) getAttributeInternal(ACCREDITATIONTYPEIDNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccreditationTypeIdNo.
     * @param value value to set the AccreditationTypeIdNo
     */
    public void setAccreditationTypeIdNo(Number value) {
        setAttributeInternal(ACCREDITATIONTYPEIDNO, value);
    }

    /**
     * Gets the attribute value for EffectiveStartDate, using the alias name EffectiveStartDate.
     * @return the value of EffectiveStartDate
     */
    public Date getEffectiveStartDate() {
        return (Date) getAttributeInternal(EFFECTIVESTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveStartDate.
     * @param value value to set the EffectiveStartDate
     */
    public void setEffectiveStartDate(Date value) {
        setAttributeInternal(EFFECTIVESTARTDATE, value);
    }

    /**
     * Gets the attribute value for EffectiveEndDate, using the alias name EffectiveEndDate.
     * @return the value of EffectiveEndDate
     */
    public Date getEffectiveEndDate() {
        return (Date) getAttributeInternal(EFFECTIVEENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveEndDate.
     * @param value value to set the EffectiveEndDate
     */
    public void setEffectiveEndDate(Date value) {
        setAttributeInternal(EFFECTIVEENDDATE, value);
    }

    /**
     * Gets the attribute value for AccredLocal, using the alias name AccredLocal.
     * @return the value of AccredLocal
     */
    public String getAccredLocal() {
        return (String) getAttributeInternal(ACCREDLOCAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccredLocal.
     * @param value value to set the AccredLocal
     */
    public void setAccredLocal(String value) {
        setAttributeInternal(ACCREDLOCAL, value);
    }

    /**
     * Gets the attribute value for AccredMulti, using the alias name AccredMulti.
     * @return the value of AccredMulti
     */
    public String getAccredMulti() {
        return (String) getAttributeInternal(ACCREDMULTI);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccredMulti.
     * @param value value to set the AccredMulti
     */
    public void setAccredMulti(String value) {
        setAttributeInternal(ACCREDMULTI, value);
    }

    /**
     * Gets the attribute value for NoAccrLocal, using the alias name NoAccrLocal.
     * @return the value of NoAccrLocal
     */
    public String getNoAccrLocal() {
        return (String) getAttributeInternal(NOACCRLOCAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoAccrLocal.
     * @param value value to set the NoAccrLocal
     */
    public void setNoAccrLocal(String value) {
        setAttributeInternal(NOACCRLOCAL, value);
    }

    /**
     * Gets the attribute value for NoAccrMulti, using the alias name NoAccrMulti.
     * @return the value of NoAccrMulti
     */
    public String getNoAccrMulti() {
        return (String) getAttributeInternal(NOACCRMULTI);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoAccrMulti.
     * @param value value to set the NoAccrMulti
     */
    public void setNoAccrMulti(String value) {
        setAttributeInternal(NOACCRMULTI, value);
    }

    /**
     * Gets the attribute value for LastUpdateDatetime, using the alias name LastUpdateDatetime.
     * @return the value of LastUpdateDatetime
     */
    public Date getLastUpdateDatetime() {
        return (Date) getAttributeInternal(LASTUPDATEDATETIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDatetime.
     * @param value value to set the LastUpdateDatetime
     */
    public void setLastUpdateDatetime(Date value) {
        setAttributeInternal(LASTUPDATEDATETIME, value);
    }

    /**
     * Gets the attribute value for Username, using the alias name Username.
     * @return the value of Username
     */
    public String getUsername() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Username.
     * @param value value to set the Username
     */
    public void setUsername(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getAccreditationType() {
        return (EntityImpl) getAttributeInternal(ACCREDITATIONTYPE);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setAccreditationType(EntityImpl value) {
        setAttributeInternal(ACCREDITATIONTYPE, value);
    }

    /**
     * @param countryCode key constituent
     * @param accreditationTypeIdNo key constituent
     * @param effectiveStartDate key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String countryCode, Number accreditationTypeIdNo, Date effectiveStartDate) {
        return new Key(new Object[] { countryCode, accreditationTypeIdNo, effectiveStartDate });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.liberty.health.comms.model.eo.CountryTaxesEO");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

