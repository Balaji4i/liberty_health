package com.liberty.health.comms.model.eo;

import com.core.model.eo.classes.CoreEntityImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 04 15:34:56 CAT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CompanyCountryEOImpl extends CoreEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        CompanyIdNo,
        CountryCode,
        MinPayoutAmt,
        LastUpdateDatetime,
        Username,
        HoldInd,
        EffectiveStartDate,
        EffectiveEndDate,
        CompanyAddress,
        CompanyContact,
        CompanyBankDetails,
        CompanyReg,
        Company;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int COMPANYIDNO = AttributesEnum.CompanyIdNo.index();
    public static final int COUNTRYCODE = AttributesEnum.CountryCode.index();
    public static final int MINPAYOUTAMT = AttributesEnum.MinPayoutAmt.index();
    public static final int LASTUPDATEDATETIME = AttributesEnum.LastUpdateDatetime.index();
    public static final int USERNAME = AttributesEnum.Username.index();
    public static final int HOLDIND = AttributesEnum.HoldInd.index();
    public static final int EFFECTIVESTARTDATE = AttributesEnum.EffectiveStartDate.index();
    public static final int EFFECTIVEENDDATE = AttributesEnum.EffectiveEndDate.index();
    public static final int COMPANYADDRESS = AttributesEnum.CompanyAddress.index();
    public static final int COMPANYCONTACT = AttributesEnum.CompanyContact.index();
    public static final int COMPANYBANKDETAILS = AttributesEnum.CompanyBankDetails.index();
    public static final int COMPANYREG = AttributesEnum.CompanyReg.index();
    public static final int COMPANY = AttributesEnum.Company.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CompanyCountryEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.liberty.health.comms.model.eo.CompanyCountryEO");
    }


    /**
     * Gets the attribute value for CompanyIdNo, using the alias name CompanyIdNo.
     * @return the value of CompanyIdNo
     */
    public Integer getCompanyIdNo() {
        return (Integer) getAttributeInternal(COMPANYIDNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanyIdNo.
     * @param value value to set the CompanyIdNo
     */
    public void setCompanyIdNo(Integer value) {
        setAttributeInternal(COMPANYIDNO, value);
    }

    /**
     * Gets the attribute value for CountryCode, using the alias name CountryCode.
     * @return the value of CountryCode
     */
    public String getCountryCode() {
        return (String) getAttributeInternal(COUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CountryCode.
     * @param value value to set the CountryCode
     */
    public void setCountryCode(String value) {
        setAttributeInternal(COUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for MinPayoutAmt, using the alias name MinPayoutAmt.
     * @return the value of MinPayoutAmt
     */
    public BigDecimal getMinPayoutAmt() {
        return (BigDecimal) getAttributeInternal(MINPAYOUTAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinPayoutAmt.
     * @param value value to set the MinPayoutAmt
     */
    public void setMinPayoutAmt(BigDecimal value) {
        setAttributeInternal(MINPAYOUTAMT, value);
    }

    /**
     * Gets the attribute value for LastUpdateDatetime, using the alias name LastUpdateDatetime.
     * @return the value of LastUpdateDatetime
     */
    public Timestamp getLastUpdateDatetime() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATETIME);
    }

    /**
     * Gets the attribute value for Username, using the alias name Username.
     * @return the value of Username
     */
    public String getUsername() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Gets the attribute value for HoldInd, using the alias name HoldInd.
     * @return the value of HoldInd
     */
    public String getHoldInd() {
        return (String) getAttributeInternal(HOLDIND);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoldInd.
     * @param value value to set the HoldInd
     */
    public void setHoldInd(String value) {
        setAttributeInternal(HOLDIND, value);
    }

    /**
     * Gets the attribute value for EffectiveStartDate, using the alias name EffectiveStartDate.
     * @return the value of EffectiveStartDate
     */
    public Date getEffectiveStartDate() {
        return (Date) getAttributeInternal(EFFECTIVESTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveStartDate.
     * @param value value to set the EffectiveStartDate
     */
    public void setEffectiveStartDate(Date value) {
        setAttributeInternal(EFFECTIVESTARTDATE, value);
    }

    /**
     * Gets the attribute value for EffectiveEndDate, using the alias name EffectiveEndDate.
     * @return the value of EffectiveEndDate
     */
    public Date getEffectiveEndDate() {
        return (Date) getAttributeInternal(EFFECTIVEENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveEndDate.
     * @param value value to set the EffectiveEndDate
     */
    public void setEffectiveEndDate(Date value) {
        setAttributeInternal(EFFECTIVEENDDATE, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getCompanyAddress() {
        return (RowIterator) getAttributeInternal(COMPANYADDRESS);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getCompanyContact() {
        return (RowIterator) getAttributeInternal(COMPANYCONTACT);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getCompanyBankDetails() {
        return (RowIterator) getAttributeInternal(COMPANYBANKDETAILS);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getCompanyReg() {
        return (RowIterator) getAttributeInternal(COMPANYREG);
    }

    /**
     * @return the associated entity CompanyEOImpl.
     */
    public CompanyEOImpl getCompany() {
        return (CompanyEOImpl) getAttributeInternal(COMPANY);
    }

    /**
     * Sets <code>value</code> as the associated entity CompanyEOImpl.
     */
    public void setCompany(CompanyEOImpl value) {
        setAttributeInternal(COMPANY, value);
    }


    /**
     * @param companyIdNo key constituent
     * @param countryCode key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer companyIdNo, String countryCode) {
        return new Key(new Object[] { companyIdNo, countryCode });
    }

    /**
     * Validation method for CompanyCountryEO.
     */
    public boolean validateCompanyStartDate() {
        try {
            Date brokerStartDate = this.getCompany().getEffectiveStartDate();
            java.sql.Date brokerDate = brokerStartDate.dateValue();
            java.sql.Date accredDate = this.getEffectiveStartDate().dateValue();

            if (brokerDate.after(accredDate)) {
                return false;
            }
        } catch (NullPointerException e) {
            return false;
        }
        return true;
    }


}

