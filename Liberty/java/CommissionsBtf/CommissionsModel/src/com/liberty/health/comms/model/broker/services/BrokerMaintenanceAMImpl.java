package com.liberty.health.comms.model.broker.services;

import com.core.model.services.classes.CoreApplicationModuleImpl;
import com.core.model.vo.classes.CoreViewObjectImpl;

import com.liberty.health.comms.model.broker.services.common.BrokerMaintenanceAM;
import com.liberty.health.comms.model.broker.vo.BrokerAccreditationVOImpl;
import com.liberty.health.comms.model.broker.vo.BrokerCommentsVOImpl;
import com.liberty.health.comms.model.broker.vo.BrokerCommentsVORowImpl;
import com.liberty.health.comms.model.broker.vo.BrokerFunctionVOImpl;
import com.liberty.health.comms.model.broker.vo.BrokerTableTypeVOImpl;
import com.liberty.health.comms.model.broker.vo.BrokerTableVOImpl;
import com.liberty.health.comms.model.broker.vo.BrokerVOImpl;


import com.liberty.health.comms.model.broker.vo.CompanyContactCorrVOImpl;
import com.liberty.health.comms.model.broker.vo.CompanyCorrAddressVOImpl;

import java.sql.CallableStatement;
import java.sql.Date;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.JboException;
import oracle.jbo.server.ViewLinkImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 12 15:15:37 CAT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BrokerMaintenanceAMImpl extends CoreApplicationModuleImpl implements BrokerMaintenanceAM {
    /**
     * This is the default constructor (do not remove).
     */
    public BrokerMaintenanceAMImpl() {
    }


    /**
     * Container's getter for BrokerByPkView.
     * @return BrokerByPkView
     */
    public BrokerVOImpl getBrokerByPkView() {
        return (BrokerVOImpl) findViewObject("BrokerByPkView");
    }

    /**
     * Container's getter for AllBrokerTableView.
     * @return AllBrokerTableView
     */
    public BrokerTableVOImpl getAllBrokerTableView() {
        return (BrokerTableVOImpl) findViewObject("AllBrokerTableView");
    }

    /**
     * Container's getter for BrokerTableTypeVO1.
     * @return BrokerTableTypeVO1
     */
    public BrokerTableTypeVOImpl getBrokerTableTypeVO1() {
        return (BrokerTableTypeVOImpl) findViewObject("BrokerTableTypeVO1");
    }


    /**
     * Container's getter for BrokerTableFkLink1.
     * @return BrokerTableFkLink1
     */
    public ViewLinkImpl getBrokerTableFkLink1() {
        return (ViewLinkImpl) findViewLink("BrokerTableFkLink1");
    }

    /**
     * Container's getter for BrokerTableTypeVO2.
     * @return BrokerTableTypeVO2
     */
    public BrokerTableTypeVOImpl getBrokerTableTypeByTableView() {
        return (BrokerTableTypeVOImpl) findViewObject("BrokerTableTypeByTableView");
    }

    /**
     * Container's getter for BrokerTableVO1.
     * @return BrokerTableVO1
     */
    public BrokerTableVOImpl getBrokerTableByPkView() {
        return (BrokerTableVOImpl) findViewObject("BrokerTableByPkView");
    }


    /**
     * Container's getter for BrokerRoView1.
     * @return BrokerRoView1
     */
    public CoreViewObjectImpl getAllBrokersView() {
        return (CoreViewObjectImpl) findViewObject("AllBrokersView");
    }


    /**
     * Container's getter for BrokerFunctionByPkView.
     * @return BrokerFunctionByPkView
     */
    public BrokerFunctionVOImpl getBrokerAttributesByBrokerView() {
        return (BrokerFunctionVOImpl) findViewObject("BrokerAttributesByBrokerView");
    }


    /**
     * Container's getter for CreateBrokerCommentsView.
     * @return CreateBrokerCommentsView
     */
    public BrokerCommentsVOImpl getCreateBrokerCommentsView() {
        return (BrokerCommentsVOImpl) findViewObject("CreateBrokerCommentsView");
    }

    public void createBrokerComment(Integer brokerIdNo, String commentDesc) {
        BrokerCommentsVOImpl vo = this.getCreateBrokerCommentsView();
        BrokerCommentsVORowImpl row = (BrokerCommentsVORowImpl) vo.createRow();
        row.setBrokerIdNo(brokerIdNo);
        row.setCommentDesc(commentDesc);
    }


    /* Container's getter for CompanyContact1.
     * @return CompanyContact1
     */

    /**
     * Container's getter for BrokerVO1.
     * @return BrokerVO1
     */
    public BrokerVOImpl getBrokerByCompanyView() {
        return (BrokerVOImpl) findViewObject("BrokerByCompanyView");
    }

    /**
     * Container's getter for BrokerAccreditationVO1.
     * @return BrokerAccreditationVO1
     */
    public BrokerAccreditationVOImpl getBrokerAccreditationByPkView() {
        return (BrokerAccreditationVOImpl) findViewObject("BrokerAccreditationByPkView");
    }

    /**
     * Container's getter for BrokerAuditRoView1.
     * @return BrokerAuditRoView1
     */
    public CoreViewObjectImpl getBrokerAuditRoView() {
        return (CoreViewObjectImpl) findViewObject("BrokerAuditRoView");
    }

    /**
     * Container's getter for FkBrokerAuditBrokerLink1.
     * @return FkBrokerAuditBrokerLink1
     */
    public ViewLinkImpl getFkBrokerAuditBrokerLink1() {
        return (ViewLinkImpl) findViewLink("FkBrokerAuditBrokerLink1");
    }

    /**
     * Container's getter for BrokerCommentsVO1.
     * @return BrokerCommentsVO1
     */
    public BrokerCommentsVOImpl getBrokerCommentsRoView() {
        return (BrokerCommentsVOImpl) findViewObject("BrokerCommentsRoView");
    }

    /**
     * Container's getter for FkBrokerCommentBrokerLink1.
     * @return FkBrokerCommentBrokerLink1
     */
    public ViewLinkImpl getFkBrokerCommentBrokerLink1() {
        return (ViewLinkImpl) findViewLink("FkBrokerCommentBrokerLink1");
    }

    /**
     * Container's getter for BrokerCommentsVO1.
     * @return BrokerCommentsVO1
     */
    public BrokerCommentsVOImpl getBrokerCommentsView() {
        return (BrokerCommentsVOImpl) findViewObject("BrokerCommentsView");
    }

    /**
     * Container's getter for FkBrokerBrokerCommentsFkLink1.
     * @return FkBrokerBrokerCommentsFkLink1
     */
    public ViewLinkImpl getFkBrokerBrokerCommentsFkLink1() {
        return (ViewLinkImpl) findViewLink("FkBrokerBrokerCommentsFkLink1");
    }

    /**
     * Container's getter for BrokerAuditRoView1.
     * @return BrokerAuditRoView1
     */
    public CoreViewObjectImpl getBrokerAuditView() {
        return (CoreViewObjectImpl) findViewObject("BrokerAuditView");
    }

    /**
     * Container's getter for FkBrokerAuditBrokerLink2.
     * @return FkBrokerAuditBrokerLink2
     */
    public ViewLinkImpl getFkBrokerAuditBrokerLink2() {
        return (ViewLinkImpl) findViewLink("FkBrokerAuditBrokerLink2");
    }

    /**
     * Container's getter for BrokerTableTypeAuditRoView1.
     * @return BrokerTableTypeAuditRoView1
     */
    public CoreViewObjectImpl getBrokerTableTypeAuditView() {
        return (CoreViewObjectImpl) findViewObject("BrokerTableTypeAuditView");
    }

    /**
     * Container's getter for FkBrokerTableTypeAuditBrokerTableTypeLink1.
     * @return FkBrokerTableTypeAuditBrokerTableTypeLink1
     */
    public ViewLinkImpl getFkBrokerTableTypeAuditBrokerTableTypeLink1() {
        return (ViewLinkImpl) findViewLink("FkBrokerTableTypeAuditBrokerTableTypeLink1");
    }

    public String executeBrokerStatement(Integer brokerIdNo, Integer companyIdNo, String templateCode,
                                         String languageCode, Date statementStartDate, Date statementEndDate, String username, String countryCode) {
        System.out.println("brokerIdNo =" + brokerIdNo + ", companyIdNo=" + companyIdNo + ",templateCode  =" +
                           templateCode + ",  languageCode =" + languageCode + ", statementDate, =" + statementStartDate +
                           ",  username =" + username);
        String sqlStmnt = null;
        CallableStatement cs = null;
        String result = null;
        try {
            sqlStmnt =
                "BEGIN LHHCOM.comms_comm_hub_pkg.execute_broker_statement (PN_BROKER_ID_NO =>?, PN_COMPANY_ID_NO =>?, PV_LANGUAGE_CODE =>?, PD_STATEMENT_START_DATE =>?, PD_STATEMENT_END_DATE =>?, PV_USERNAME =>?, PV_TEMPLATE_CODE =>?, PV_COUNTRY_CODE =>?, PV_RETURN_MSG =>?); END;";
            cs = this.getDBTransaction().createCallableStatement(sqlStmnt, this.getDBTransaction().DEFAULT);
            //Set procedure paramaters
            if (brokerIdNo != null) {
                cs.setInt(1, brokerIdNo.intValue());
            } else {
                cs.setString(1, null);
            }

            if (companyIdNo != null) {
                cs.setInt(2, companyIdNo.intValue());
            } 
//          else {
//                cs.setString(2, null);
//            }

            if (languageCode != null) {
                cs.setString(3, languageCode);
            } else {
                cs.setString(3, null);
            }

            if (statementStartDate != null) {
                cs.setDate(4, statementStartDate);
            } else {
                cs.setString(4, null);
            }
            
            if (statementEndDate != null) {
                cs.setDate(5, statementEndDate);
            } else {
                cs.setString(5, null);
            }


            cs.setString(6, username);


            if (templateCode != null) {
                cs.setString(7, templateCode);
            } else {
                cs.setString(7, null);
            }
            
            if (countryCode != null) {
                cs.setString(8, countryCode);
            } else {
                cs.setString(8, null);
            }
            //Register out parameters
            cs.registerOutParameter(9, Types.VARCHAR);
            cs.execute();
            result = cs.getString(9);
        } catch (SQLException e) {
            e.printStackTrace();
            e.getLocalizedMessage();
        } finally {
            if (cs != null) {
                try {
                    cs.close();
                } catch (SQLException e) {
                    throw new JboException(e);
                }
            }
        }
        return result;
    }

    /**
     * Container's getter for BrokerTableAuditRoView1.
     * @return BrokerTableAuditRoView1
     */
    public CoreViewObjectImpl getBrokerTableAuditRoView() {
        return (CoreViewObjectImpl) findViewObject("BrokerTableAuditRoView");
    }

    /**
     * Container's getter for FkBrokerTableAuditBrokerTableLink1.
     * @return FkBrokerTableAuditBrokerTableLink1
     */
    public ViewLinkImpl getFkBrokerTableAuditBrokerTableLink1() {
        return (ViewLinkImpl) findViewLink("FkBrokerTableAuditBrokerTableLink1");
    }

    /**
     * Container's getter for BrokerFunctionAuditRoView1.
     * @return BrokerFunctionAuditRoView1
     */
    public CoreViewObjectImpl getBrokerFunctionAuditRoView() {
        return (CoreViewObjectImpl) findViewObject("BrokerFunctionAuditRoView");
    }

    /**
     * Container's getter for FkBrokerFunctionAuditBrokerFunctionLink1.
     * @return FkBrokerFunctionAuditBrokerFunctionLink1
     */
    public ViewLinkImpl getFkBrokerFunctionAuditBrokerFunctionLink1() {
        return (ViewLinkImpl) findViewLink("FkBrokerFunctionAuditBrokerFunctionLink1");
    }

    /**
     * Container's getter for BrokerAccredAuditRoView1.
     * @return BrokerAccredAuditRoView1
     */
    public CoreViewObjectImpl getBrokerAccredAuditRoView() {
        return (CoreViewObjectImpl) findViewObject("BrokerAccredAuditRoView");
    }

    /**
     * Container's getter for FkBrokerAccAuditBrokerAccLink1.
     * @return FkBrokerAccAuditBrokerAccLink1
     */
    public ViewLinkImpl getFkBrokerAccAuditBrokerAccLink1() {
        return (ViewLinkImpl) findViewLink("FkBrokerAccAuditBrokerAccLink1");
    }

    /**
     * Container's getter for BrokerStatementsSubmitRoView1.
     * @return BrokerStatementsSubmitRoView1
     */
    public CoreViewObjectImpl getBrokerStatementsSubmitRoView() {
        return (CoreViewObjectImpl) findViewObject("BrokerStatementsSubmitRoView");
    }

    /**
     * Container's getter for CompanyCorrAddress1.
     * @return CompanyCorrAddress1
     */
    public CompanyCorrAddressVOImpl getCompanyCorrAddress1() {
        return (CompanyCorrAddressVOImpl) findViewObject("CompanyCorrAddress1");
    }

    /**
     * Container's getter for CompanyContactCorr1.
     * @return CompanyContactCorr1
     */
    public CompanyContactCorrVOImpl getCompanyContactCorr1() {
        return (CompanyContactCorrVOImpl) findViewObject("CompanyContactCorr1");
    }


    /**
     * Container's getter for BrokerFunctionVO1.
     * @return BrokerFunctionVO1
     */
    public BrokerFunctionVOImpl getBrokerAttributesByBrokerView1() {
        return (BrokerFunctionVOImpl) findViewObject("BrokerAttributesByBrokerView1");
    }

    /**
     * Container's getter for BrokerFunctionAuditRoView1.
     * @return BrokerFunctionAuditRoView1
     */
    public CoreViewObjectImpl getBrokerFunctionAuditRoView1() {
        return (CoreViewObjectImpl) findViewObject("BrokerFunctionAuditRoView1");
    }

    /**
     * Container's getter for FkBrokerFunctionAuditBrokerFunctionLink2.
     * @return FkBrokerFunctionAuditBrokerFunctionLink2
     */
    public ViewLinkImpl getFkBrokerFunctionAuditBrokerFunctionLink2() {
        return (ViewLinkImpl) findViewLink("FkBrokerFunctionAuditBrokerFunctionLink2");
    }
}

