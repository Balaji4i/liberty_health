package com.liberty.health.comms.model.dashboard;

import com.core.model.services.classes.CoreApplicationModuleImpl;
import com.core.model.vo.classes.CoreViewObjectImpl;



import com.liberty.health.comms.model.broker.vo.CompanyBankDetailsVOImpl;
import com.liberty.health.comms.model.broker.vo.CompanyBankDetailsVORowImpl;
import com.liberty.health.comms.model.brokerage.vo.CommsPartialReceiptVOImpl;
import com.liberty.health.comms.model.dashboard.common.DashboardAM;
import com.liberty.health.comms.model.comms.services.CommsRunAMImpl;
import com.liberty.health.comms.model.dashboard.vo.FusionActiveBuVOImpl;

import com.liberty.health.comms.model.dashboard.vo.FusionGroupPremiumsReconVOImpl;
import com.liberty.health.comms.model.dashboard.vo.FusionPaymentsReconVOImpl;
import com.liberty.health.comms.model.dashboard.vo.FusionPaymentsVOImpl;
import com.liberty.health.comms.model.dashboard.vo.FusionPremInvoiceMedReceiptVOImpl;
import com.liberty.health.comms.model.dashboard.vo.FusionPremiumsReconVOImpl;

import com.liberty.health.comms.model.dashboard.vo.FusionPrepaymentVOImpl;

import com.liberty.health.comms.model.dashboard.vo.OhiGroupCodesVOImpl;
import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.JboException;

import com.core.utils.ADFUtils;

import oracle.jbo.server.DBTransaction;

import oracle.adf.share.ADFContext;

import java.util.Map;


import com.liberty.health.comms.model.dashboard.vo.fusionPremiumsReportVOImpl;

import com.liberty.health.comms.model.dashboard.vo.CommPercCompanyIdNoRoViewImpl;
import com.liberty.health.comms.model.dashboard.vo.CommPercGroupCodeRoViewImpl;
import com.liberty.health.comms.model.dashboard.vo.CommPercPersonRoViewImpl;
import com.liberty.health.comms.model.dashboard.vo.CommPercPolicyCodeRoViewImpl;
import com.liberty.health.comms.model.dashboard.vo.CommPercProductCodeRoViewImpl;
import com.liberty.health.comms.model.dashboard.vo.DbLocalCodeRoViewImpl;
import com.liberty.health.comms.model.dashboard.vo.FusionActiveBuVORowImpl;
import com.liberty.health.comms.model.dashboard.vo.HoldIndCompanyIdNoRoViewImpl;
import com.liberty.health.comms.model.dashboard.vo.HoldIndGroupCodeRoViewImpl;
import com.liberty.health.comms.model.dashboard.vo.HoldIndPersonRoViewImpl;
import com.liberty.health.comms.model.dashboard.vo.HoldIndPolicyCodeRoViewImpl;
import com.liberty.health.comms.model.dashboard.vo.HoldIndProductCodeRoViewImpl;
import com.liberty.health.comms.model.dashboard.vo.allCommsPercentageApprovalsVOImpl;
import com.liberty.health.comms.model.dashboard.vo.fusionPremiumsReportVOImpl;

import com.oracle.common.collections.Arrays;

import java.sql.Date;
import java.sql.ResultSet;

import java.util.ArrayList;
import java.util.Calendar;

import java.util.StringTokenizer;

import javax.faces.context.FacesContext;

import oracle.adf.model.BindingContext;
import oracle.adf.model.binding.DCBindingContainer;

import oracle.jbo.server.ViewLinkImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 21 10:29:14 CAT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------

public class DashboardAMImpl extends CoreApplicationModuleImpl implements DashboardAM {


    private static int VARCHAR = Types.VARCHAR;

    /**
     * This is the default constructor (do not remove).
     */
    public DashboardAMImpl() {
    }

    /**
     * Container's getter for DbLocalCodeRoView1.
     * @return DbLocalCodeRoView1
     */
    public DbLocalCodeRoViewImpl getDbLocalCodeRoView1() {
        return (DbLocalCodeRoViewImpl) findViewObject("DbLocalCodeRoView1");
    }

    /**
     * Container's getter for UploadErrorsRoView1.
     * @return UploadErrorsRoView1
     */
    public CoreViewObjectImpl getUploadErrorsRoView1() {
        return (CoreViewObjectImpl) findViewObject("UploadErrorsRoView1");
    }

    /**
     * Container's getter for DbCommPercRoView1.
     * @return DbCommPercRoView1
     */
    public CoreViewObjectImpl getDbCommPercRoView1() {
        return (CoreViewObjectImpl) findViewObject("DbCommPercRoView1");
    }

    /**
     * Container's getter for DbNoOfCommPercChangesRoView1.
     * @return DbNoOfCommPercChangesRoView1
     */
    public CoreViewObjectImpl getDbNoOfCommPercChangesRoView1() {
        return (CoreViewObjectImpl) findViewObject("DbNoOfCommPercChangesRoView1");
    }

    /**
     * Container's getter for DashboardNoOfDaysParameter.
     * @return DashboardNoOfDaysParameter
     */
    public CoreViewObjectImpl getDashboardNoOfDaysParameter() {
        return (CoreViewObjectImpl) findViewObject("DashboardNoOfDaysParameter");
    }

    /**
     * Container's getter for NoOfPaymentsReceivedErrorsRoView1.
     * @return NoOfPaymentsReceivedErrorsRoView1
     */
    public CoreViewObjectImpl getNoOfPaymentsReceivedErrorsRoView1() {
        return (CoreViewObjectImpl) findViewObject("NoOfPaymentsReceivedErrorsRoView1");
    }

    /**
     * Container's getter for NoOfCommsTestRunsRoView1.
     * @return NoOfCommsTestRunsRoView1
     */
    public CoreViewObjectImpl getNoOfCommsTestRunsRoView1() {
        return (CoreViewObjectImpl) findViewObject("NoOfCommsTestRunsRoView1");
    }

    /**
     * Container's getter for NoOfCreatedPaymentsRoView1.
     * @return NoOfCreatedPaymentsRoView1
     */
    public CoreViewObjectImpl getNoOfCreatedPaymentsRoView1() {
        return (CoreViewObjectImpl) findViewObject("NoOfCreatedPaymentsRoView1");
    }

    /**
     * Container's getter for NoOfReleasedPaymentsRoView1.
     * @return NoOfReleasedPaymentsRoView1
     */
    public CoreViewObjectImpl getNoOfReleasedPaymentsRoView1() {
        return (CoreViewObjectImpl) findViewObject("NoOfReleasedPaymentsRoView1");
    }

    /**
     * Container's getter for NoOfHoldPaymentsRoView1.
     * @return NoOfHoldPaymentsRoView1
     */
    public CoreViewObjectImpl getNoOfHoldPaymentsRoView1() {
        return (CoreViewObjectImpl) findViewObject("NoOfHoldPaymentsRoView1");
    }

    /**
     * Container's getter for TotalPayoutStatusRoView1.
     * @return TotalPayoutStatusRoView1
     */
    public CoreViewObjectImpl getTotalPayoutStatusRoView1() {
        return (CoreViewObjectImpl) findViewObject("TotalPayoutStatusRoView1");
    }

    /**
     * Container's getter for TopPerformersRoView1.
     * @return TopPerformersRoView1
     */
    public CoreViewObjectImpl getTopPerformersRoView1() {
        return (CoreViewObjectImpl) findViewObject("TopPerformersRoView1");
    }

    /**
     * Container's getter for NoOfCommPercCompanyChangesView.
     * @return NoOfCommPercCompanyChangesView
     */
    public CommPercCompanyIdNoRoViewImpl getNoOfCommPercCompanyChangesView() {
        return (CommPercCompanyIdNoRoViewImpl) findViewObject("NoOfCommPercCompanyChangesView");
    }

    /**
     * Container's getter for NoOfCommPercGroupChangesView.
     * @return NoOfCommPercGroupChangesView
     */
    public CommPercGroupCodeRoViewImpl getNoOfCommPercGroupChangesView() {
        return (CommPercGroupCodeRoViewImpl) findViewObject("NoOfCommPercGroupChangesView");
    }

    /**
     * Container's getter for NoOfCommPercPersonChangesView.
     * @return NoOfCommPercPersonChangesView
     */
    public CommPercPersonRoViewImpl getNoOfCommPercPersonChangesView() {
        return (CommPercPersonRoViewImpl) findViewObject("NoOfCommPercPersonChangesView");
    }

    /**
     * Container's getter for NoOfCommPercPolicyChangesView.
     * @return NoOfCommPercPolicyChangesView
     */
    public CommPercPolicyCodeRoViewImpl getNoOfCommPercPolicyChangesView() {
        return (CommPercPolicyCodeRoViewImpl) findViewObject("NoOfCommPercPolicyChangesView");
    }

    /**
     * Container's getter for NoOfCommPercProductChangesView.
     * @return NoOfCommPercProductChangesView
     */
    public CommPercProductCodeRoViewImpl getNoOfCommPercProductChangesView() {
        return (CommPercProductCodeRoViewImpl) findViewObject("NoOfCommPercProductChangesView");
    }

    /**
     * Container's getter for HoldIndCompanyIdNoRoView1.
     * @return HoldIndCompanyIdNoRoView1
     */
    public HoldIndCompanyIdNoRoViewImpl getHoldIndCompanyIdNoRoView1() {
        return (HoldIndCompanyIdNoRoViewImpl) findViewObject("HoldIndCompanyIdNoRoView1");
    }

    /**
     * Container's getter for HoldIndGroupCodeRoView1.
     * @return HoldIndGroupCodeRoView1
     */
    public HoldIndGroupCodeRoViewImpl getHoldIndGroupCodeRoView1() {
        return (HoldIndGroupCodeRoViewImpl) findViewObject("HoldIndGroupCodeRoView1");
    }

    /**
     * Container's getter for HoldIndPersonRoView1.
     * @return HoldIndPersonRoView1
     */
    public HoldIndPersonRoViewImpl getHoldIndPersonRoView1() {
        return (HoldIndPersonRoViewImpl) findViewObject("HoldIndPersonRoView1");
    }

    /**
     * Container's getter for HoldIndPolicyCodeRoView1.
     * @return HoldIndPolicyCodeRoView1
     */
    public HoldIndPolicyCodeRoViewImpl getHoldIndPolicyCodeRoView1() {
        return (HoldIndPolicyCodeRoViewImpl) findViewObject("HoldIndPolicyCodeRoView1");
    }

    /**
     * Container's getter for HoldIndProductCodeRoView1.
     * @return HoldIndProductCodeRoView1
     */
    public HoldIndProductCodeRoViewImpl getHoldIndProductCodeRoView1() {
        return (HoldIndProductCodeRoViewImpl) findViewObject("HoldIndProductCodeRoView1");
    }

    /**
     * Container's getter for BackDatedChangesView1.
     * @return BackDatedChangesView1
     */
    public CoreViewObjectImpl getBackDatedChangesView1() {
        return (CoreViewObjectImpl) findViewObject("BackDatedChangesView1");
    }

    /**
     * Container's getter for allCommsPercentageApprovals1.
     * @return allCommsPercentageApprovals1
     */
    public allCommsPercentageApprovalsVOImpl getallCommsPercentageApprovals1() {
        return (allCommsPercentageApprovalsVOImpl) findViewObject("allCommsPercentageApprovals1");
    }

    /**
     * Container's getter for fusionPremiumsReport1.
     * @return fusionPremiumsReport1
     */
    public fusionPremiumsReportVOImpl getfusionPremiumsReport1() {
        return (fusionPremiumsReportVOImpl) findViewObject("fusionPremiumsReport1");
    }

    /**
     * Container's getter for FkLocalCodeUpldErrorLink1.
     * @return FkLocalCodeUpldErrorLink1
     */
    public ViewLinkImpl getFkLocalCodeUpldErrorLink1() {
        return (ViewLinkImpl) findViewLink("FkLocalCodeUpldErrorLink1");
    }

    /**
     * Container's getter for FkLocalCodeCommPercLink1.
     * @return FkLocalCodeCommPercLink1
     */
    public ViewLinkImpl getFkLocalCodeCommPercLink1() {
        return (ViewLinkImpl) findViewLink("FkLocalCodeCommPercLink1");
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try { // 1. Create a JDBC CallabledStatement
            st = getDBTransaction().createCallableStatement("BEGIN ? := " + stmt + ";END;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) { // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }


    /**
     * Container's getter for FusionActiveBu1.
     * @return FusionActiveBu1
     */
    public FusionActiveBuVOImpl getFusionActiveBu1() {
        return (FusionActiveBuVOImpl) findViewObject("FusionActiveBu1");
    }


    public void submitJob(String pBu) {
        //before submitting the premium job get the countries applicable for a user and populate a session variable
        //to handle for the entire session countryList
        String sqlStmnt = null;
        String countryList = null;
        ADFContext adfCtx = ADFContext.getCurrent();
        Map sessionScope = adfCtx.getSessionScope();
        CallableStatement cs = null;
        String userCode = ADFContext.getCurrent()
                                    .getSecurityContext()
                                    .getUserName();
        System.out.println("Username ---" + userCode);

        System.out.println("before execute function to get country Listing");
        
        try {
            sqlStmnt = "LHHCOM.GET_COUNTRY_ACCESS_LIST (p_user_code_val =>?)";
            // cs = this.getDBTransaction().createCallableStatement(sqlStmnt, this.getDBTransaction().DEFAULT);
            cs = this.getDBTransaction().createCallableStatement("BEGIN ? := " + sqlStmnt + ";END;", 0);
            cs.registerOutParameter(1, Types.VARCHAR);
            cs.setString(2, userCode);
            cs.execute();
            countryList = cs.getString(1);

            //check that the countryList has a value
           
          
           // countryList = countryList.replaceAll("\'","");
           // System.out.println("Country List after replace --" + countryList);
             Object val = sessionScope.put("countryList", countryList);
          //  Object username = sessionScope.put("userName", userCode);

            System.out.println("users countryList access is " + sessionScope.get("countryList"));

          //  System.out.println("userName  is " + sessionScope.get("userName"));


        } catch (SQLException e) {
            e.printStackTrace();
            e.getLocalizedMessage();
        } finally {
            if (cs != null) {
                try {
                    cs.close();
                } catch (SQLException e) {
                    throw new JboException(e);
                }
            }
        }


        System.out.println("after showing values now calling relevant create job");
        System.out.println("users countryList access is after  " + sessionScope.get("countryList"));
        java.sql.Date currDate = new java.sql.Date(Calendar.getInstance()
                                                           .getTime()
                                                           .getTime());
//        String jobName = "PROCESS_FUSION_PREMIUMS";


        /*create the job */
//        this.createJob(jobName, "PLSQL_BLOCK", "BEGIN LHHCOM.COMMISSIONS_PKG.invoke_rest_service('" + pBu + "');END;",
//                       currDate, 0, "Submitting job for Commissions Calc Run");


        //this.enableDbJob(jobName);
        // return result;
    }

    public void submitFusionGroupReconJob(String groupCode, String parentgroupCode) {
        System.out.println("calling Group Reconciliation Web Service:groupCode: "+groupCode);
        System.out.println("calling Group Reconciliation Web Service:parentgroupCode: "+parentgroupCode);
        if (parentgroupCode.equalsIgnoreCase("")) {
            parentgroupCode = groupCode;
            System.out.println("inside if:parentgroupCode: " + parentgroupCode);
            System.out.println("inside if:groupCode: " + groupCode);
        }
        java.sql.Date currDate = new java.sql.Date(Calendar.getInstance()
                                                           .getTime()
                                                           .getTime());
        String jobName = "FUSION_BILLING_GROUP";

        System.out.println("Before running job:parentgroupCode: "+parentgroupCode);
        System.out.println("Before running job:groupCode: "+groupCode);
        /*create the job */
        this.createJob(jobName, "PLSQL_BLOCK",
                       "BEGIN LHHCOM.COMMISSIONS_PKG.get_fusion_billing_group('" + parentgroupCode + "');END;", currDate, 0,
                       "Submitting job for Billing Group Billing Reconciliation");


        this.enableDbJob(jobName);

        // return result;
    }


    public void submitFusionPayReconJob(String companyIdNo, String invNo, String fromDate, String toDate, String businessUnit) {
        System.out.println("calling submitFusionPayReconJob ");
        System.out.println("calling submitFusionPayReconJob - companyIdNo " + companyIdNo);
        System.out.println("calling submitFusionPayReconJob - invNo       " + invNo);
        System.out.println("calling submitFusionPayReconJob - fromDate    " + fromDate);
        System.out.println("calling submitFusionPayReconJob - toDate      " + toDate);
        System.out.println("calling submitFusionPayReconJob - businessUnit      " + businessUnit);
        java.sql.Date currDate = new java.sql.Date(Calendar.getInstance()
                                                           .getTime()
                                                           .getTime());
        String jobName = "PROCESS_FUSION_PAYMENTS";

        /*create the job */
        this.createJob(jobName, "PLSQL_BLOCK",
                       "BEGIN LHHCOM.COMMISSIONS_PKG.process_fusion_payments(" + "\'" + companyIdNo + "\'" + "," +
                       "\'" + invNo + "\'" + "," + "\'" + fromDate + "\'" + "," + "\'" + toDate + "\'" + "," + "\'" + businessUnit + "\'" + ");END;",
                       currDate, 0, "Submitting job for Fusion Payments Reconciliation Run");


        this.enableDbJob(jobName);

        // return result;
    }

    public void createJob(String jobName, String jobType, String jobAction, Date startDate, int numArguments,
                          String comments) {
        /*first create the job */
        String sqlStmnt = null;
        CallableStatement cs = null;
        System.out.println("Before create job " + jobAction);
        try {
            sqlStmnt =
                "BEGIN LHHCOM.commissions_pkg.create_job (p_job_name =>?, p_job_type =>?, p_job_action =>?, p_start_date =>?,p_no_arguments =>?, p_comments =>?); END;";
           System.out.println("Create Job sqlStmnt: "+sqlStmnt);
            cs = this.getDBTransaction().createCallableStatement(sqlStmnt, this.getDBTransaction().DEFAULT);
            cs.setString(1, jobName);
            cs.setString(2, jobType);
            cs.setString(3, jobAction);
            cs.setDate(4, startDate);
            cs.setInt(5, numArguments);
            cs.setString(6, comments);

            cs.execute();

        } catch (SQLException e) {
            e.printStackTrace();
            e.getLocalizedMessage();
        } finally {
            if (cs != null) {
                try {
                    cs.close();
                } catch (SQLException e) {
                    throw new JboException(e);
                }
            }
        }
        System.out.println("At the end of create job " + jobAction);
    }

    public void enableDbJob(String jobName) {
        String sqlStmnt = null;
        CallableStatement cs = null;

        System.out.println("before execute enable job " + jobName);
        try {
            sqlStmnt = "BEGIN LHHCOM.commissions_pkg.enable_job (p_job_name =>?); END;";
            System.out.println("Enable Job sqlStmnt: "+sqlStmnt);
            cs = this.getDBTransaction().createCallableStatement(sqlStmnt, this.getDBTransaction().DEFAULT);
            cs.setString(1, jobName);
            cs.execute();

        } catch (SQLException e) {
            e.printStackTrace();
            e.getLocalizedMessage();
        } finally {
            if (cs != null) {
                try {
                    cs.close();
                } catch (SQLException e) {
                    throw new JboException(e);
                }
            }
        }
        System.out.println("At the end of execute enable job " + jobName);
    }

    /**
     * Container's getter for FusionPremiumsRecon1.
     * @return FusionPremiumsRecon1
     */
    public FusionPremiumsReconVOImpl getFusionPremiumsRecon1() {
        return (FusionPremiumsReconVOImpl) findViewObject("FusionPremiumsRecon1");
    }

    /**
     * Container's getter for FusionPayments1.
     * @return FusionPayments1
     */
    public FusionPaymentsVOImpl getFusionPayments1() {
        return (FusionPaymentsVOImpl) findViewObject("FusionPayments1");
    }

    /**
     * Container's getter for FusionPrepayment1.
     * @return FusionPrepayment1
     */
    public FusionPrepaymentVOImpl getFusionPrepayment1() {
        return (FusionPrepaymentVOImpl) findViewObject("FusionPrepayment1");
    }

    /**
     * Container's getter for FusionGroupPremiumsRecon1.
     * @return FusionGroupPremiumsRecon1
     */
    public FusionGroupPremiumsReconVOImpl getFusionGroupPremiumsReconVO1() {
        return (FusionGroupPremiumsReconVOImpl) findViewObject("FusionGroupPremiumsReconVO1");
    }

    /**
     * Container's getter for OhiGroupCodes1.
     * @return OhiGroupCodes1
     */
    public OhiGroupCodesVOImpl getOhiGroupCodes1() {
        return (OhiGroupCodesVOImpl) findViewObject("OhiGroupCodes1");
    }

    /**
     * Container's getter for CommsPartialReceiptVO1.
     * @return CommsPartialReceiptVO1
     */
    public CommsPartialReceiptVOImpl getCommsPartialReceiptVO1() {
        return (CommsPartialReceiptVOImpl) findViewObject("CommsPartialReceiptVO1");
    }

    /**
     * Container's getter for FusionPaymentsRecon1.
     * @return FusionPaymentsRecon1
     */
    public FusionPaymentsReconVOImpl getFusionPaymentsRecon1() {
        return (FusionPaymentsReconVOImpl) findViewObject("FusionPaymentsRecon1");
    }


    /**
     * Container's getter for FusionPremInvoiceMedReceiptVO1.
     * @return FusionPremInvoiceMedReceiptVO1
     */
    public FusionPremInvoiceMedReceiptVOImpl getFusionPremInvoiceMedReceiptVO1() {
        return (FusionPremInvoiceMedReceiptVOImpl) findViewObject("FusionPremInvoiceMedReceiptVO1");
    }

    /**
     * Container's getter for FusionPremInvoiceMedReceipt1.
     * @return FusionPremInvoiceMedReceipt1
     */
    public FusionPremInvoiceMedReceiptVOImpl getFusionPremInvoiceMedReceipt1() {
        return (FusionPremInvoiceMedReceiptVOImpl) findViewObject("FusionPremInvoiceMedReceipt1");
    }
}


