package com.liberty.health.comms.model.ohi.vo;

import com.core.model.vo.classes.CoreViewRowImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 29 07:36:12 CAT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OhiPolicyBrokersVORowImpl extends CoreViewRowImpl {

    public static final int ENTITY_OHIPOLICYBROKERSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        PoliId,
        PobrId,
        BrokerIdNo,
        CompanyIdNo,
        EffectiveStartDate,
        EffectiveEndDate,
        LastUpdateDatetime,
        Username,
        CompanyLovView1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int POLIID = AttributesEnum.PoliId.index();
    public static final int POBRID = AttributesEnum.PobrId.index();
    public static final int BROKERIDNO = AttributesEnum.BrokerIdNo.index();
    public static final int COMPANYIDNO = AttributesEnum.CompanyIdNo.index();
    public static final int EFFECTIVESTARTDATE = AttributesEnum.EffectiveStartDate.index();
    public static final int EFFECTIVEENDDATE = AttributesEnum.EffectiveEndDate.index();
    public static final int LASTUPDATEDATETIME = AttributesEnum.LastUpdateDatetime.index();
    public static final int USERNAME = AttributesEnum.Username.index();
    public static final int COMPANYLOVVIEW1 = AttributesEnum.CompanyLovView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OhiPolicyBrokersVORowImpl() {
    }

    /**
     * Gets OhiPolicyBrokersEO entity object.
     * @return the OhiPolicyBrokersEO
     */
    public EntityImpl getOhiPolicyBrokersEO() {
        return (EntityImpl) getEntity(ENTITY_OHIPOLICYBROKERSEO);
    }

    /**
     * Gets the attribute value for POLI_ID using the alias name PoliId.
     * @return the POLI_ID
     */
    public Number getPoliId() {
        return (Number) getAttributeInternal(POLIID);
    }

    /**
     * Sets <code>value</code> as attribute value for POLI_ID using the alias name PoliId.
     * @param value value to set the POLI_ID
     */
    public void setPoliId(Number value) {
        setAttributeInternal(POLIID, value);
    }

    /**
     * Gets the attribute value for POBR_ID using the alias name PobrId.
     * @return the POBR_ID
     */
    public Number getPobrId() {
        return (Number) getAttributeInternal(POBRID);
    }

    /**
     * Sets <code>value</code> as attribute value for POBR_ID using the alias name PobrId.
     * @param value value to set the POBR_ID
     */
    public void setPobrId(Number value) {
        setAttributeInternal(POBRID, value);
    }

    /**
     * Gets the attribute value for BROKER_ID_NO using the alias name BrokerIdNo.
     * @return the BROKER_ID_NO
     */
    public Number getBrokerIdNo() {
        return (Number) getAttributeInternal(BROKERIDNO);
    }

    /**
     * Sets <code>value</code> as attribute value for BROKER_ID_NO using the alias name BrokerIdNo.
     * @param value value to set the BROKER_ID_NO
     */
    public void setBrokerIdNo(Number value) {
        setAttributeInternal(BROKERIDNO, value);
    }

    /**
     * Gets the attribute value for COMPANY_ID_NO using the alias name CompanyIdNo.
     * @return the COMPANY_ID_NO
     */
    public Number getCompanyIdNo() {
        return (Number) getAttributeInternal(COMPANYIDNO);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPANY_ID_NO using the alias name CompanyIdNo.
     * @param value value to set the COMPANY_ID_NO
     */
    public void setCompanyIdNo(Number value) {
        setAttributeInternal(COMPANYIDNO, value);
    }

    /**
     * Gets the attribute value for EFFECTIVE_START_DATE using the alias name EffectiveStartDate.
     * @return the EFFECTIVE_START_DATE
     */
    public Date getEffectiveStartDate() {
        return (Date) getAttributeInternal(EFFECTIVESTARTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EFFECTIVE_START_DATE using the alias name EffectiveStartDate.
     * @param value value to set the EFFECTIVE_START_DATE
     */
    public void setEffectiveStartDate(Date value) {
        setAttributeInternal(EFFECTIVESTARTDATE, value);
    }

    /**
     * Gets the attribute value for EFFECTIVE_END_DATE using the alias name EffectiveEndDate.
     * @return the EFFECTIVE_END_DATE
     */
    public Date getEffectiveEndDate() {
        return (Date) getAttributeInternal(EFFECTIVEENDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EFFECTIVE_END_DATE using the alias name EffectiveEndDate.
     * @param value value to set the EFFECTIVE_END_DATE
     */
    public void setEffectiveEndDate(Date value) {
        setAttributeInternal(EFFECTIVEENDDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATETIME using the alias name LastUpdateDatetime.
     * @return the LAST_UPDATE_DATETIME
     */
    public Date getLastUpdateDatetime() {
        return (Date) getAttributeInternal(LASTUPDATEDATETIME);
    }

    /**
     * Gets the attribute value for USERNAME using the alias name Username.
     * @return the USERNAME
     */
    public String getUsername() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CompanyLovView1.
     */
    public RowSet getCompanyLovView1() {
        return (RowSet) getAttributeInternal(COMPANYLOVVIEW1);
    }
}

